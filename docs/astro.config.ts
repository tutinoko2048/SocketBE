// @ts-check
import { defineConfig } from 'astro/config';
import starlight from '@astrojs/starlight';
import starlightTypeDoc, { typeDocSidebarGroup } from 'starlight-typedoc';
import type { HookParameters } from '@astrojs/starlight/types';

const generatedSidebarLabel = 'Reference';

// https://astro.build/config
export default defineConfig({
	integrations: [
		starlight({
			title: 'SocketBE Docs',
			defaultLocale: 'root',
			locales: {
				root: {
					label: 'English',
					lang: 'en'
				},
				ja: {
					label: '日本語',
					lang: 'ja'
				}
			},
			plugins: [
        // Generate the documentation.
        starlightTypeDoc({
          entryPoints: ['../src/index.ts'],
          tsconfig: '../tsconfig.json',
					output: 'reference',
					sidebar: {
						label: generatedSidebarLabel,
					},
        }),

				{
					name: 'post-typedoc',
					hooks: {
						async 'config:setup'({ astroConfig, command, config, logger, updateConfig }) {
							const generatedSidebar: SidebarItem = config.sidebar!.find((item) => typeof item !== 'string' && item?.label === generatedSidebarLabel);
							if (!generatedSidebar) {
								logger.error(`Failed to find sidebar generated by starlight-typedoc.`);
								return;
							}

							console.log(generatedSidebar.items)

							// process.exit(0)
						}
					}
				}
      ],

			social: [{ icon: 'github', label: 'GitHub', href: 'https://github.com/tutinoko2048/SocketBE' }],
			sidebar: [
				{
					label: 'Getting started',
					slug: 'getting-started',
				},
				{
					label: 'Guides',
					autogenerate: {
						directory: 'guides',
					}
				},
				typeDocSidebarGroup,
			],
		}),
	],
});

type StarlightUserConfigSidebar = HookParameters<'config:setup'>['config']['sidebar']